<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE queryservice PUBLIC "-//ANYFRAME//DTD QUERYSERVICE//EN"
"http://www.anyframejava.org/dtd/anyframe-core-query-mapping-3.1.dtd">
<queryservice>
	<queries>
		<query id="findMobileResultList" isDynamic="true">
			<statement>
			<![CDATA[
			WITH A1 AS(
			    SELECT SUM(SUBSTR(A.ANSWER, 1,1)) AS TEST1,SUM(SUBSTR(A.ANSWER,  2,1)) AS TEST2,SUM(SUBSTR(A.ANSWER,  3,1)) AS TEST3,SUM(SUBSTR(A.ANSWER,  4,1)) AS TEST4,SUM(SUBSTR(A.ANSWER,  5,1)) AS TEST5
			          ,SUM(SUBSTR(A.ANSWER, 6,1)) AS TEST6,SUM(SUBSTR(A.ANSWER,  7,1)) AS TEST7,SUM(SUBSTR(A.ANSWER,  8,1)) AS TEST8,SUM(SUBSTR(A.ANSWER,  9,1)) AS TEST9,SUM(SUBSTR(A.ANSWER, 10,1)) AS TEST10
			          ,SUM(SUBSTR(A.ANSWER,11,1)) AS TEST11,SUM(SUBSTR(A.ANSWER,12,1)) AS TEST12,SUM(SUBSTR(A.ANSWER,13,1)) AS TEST13,SUM(SUBSTR(A.ANSWER,14,1)) AS TEST14,SUM(SUBSTR(A.ANSWER,15,1)) AS TEST15
			          ,SUM(SUBSTR(A.ANSWER,16,1)) AS TEST16,SUM(SUBSTR(A.ANSWER,17,1)) AS TEST17,SUM(SUBSTR(A.ANSWER,18,1)) AS TEST18,SUM(SUBSTR(A.ANSWER,19,1)) AS TEST19,SUM(SUBSTR(A.ANSWER,20,1)) AS TEST20
			          ,SUM(SUBSTR(A.ANSWER,21,1)) AS TEST21,SUM(SUBSTR(A.ANSWER,22,1)) AS TEST22,SUM(SUBSTR(A.ANSWER,23,1)) AS TEST23,SUM(SUBSTR(A.ANSWER,24,1)) AS TEST24,SUM(SUBSTR(A.ANSWER,25,1)) AS TEST25
			          ,SUM(SUBSTR(A.ANSWER,26,1)) AS TEST26,SUM(SUBSTR(A.ANSWER,27,1)) AS TEST27,SUM(SUBSTR(A.ANSWER,28,1)) AS TEST28,SUM(SUBSTR(A.ANSWER,29,1)) AS TEST29,SUM(SUBSTR(A.ANSWER,30,1)) AS TEST30
			          ,SUM(SUBSTR(A.ANSWER,31,1)) AS TEST31,SUM(SUBSTR(A.ANSWER,32,1)) AS TEST32,SUM(SUBSTR(A.ANSWER,33,1)) AS TEST33,SUM(SUBSTR(A.ANSWER,34,1)) AS TEST34,SUM(SUBSTR(A.ANSWER,35,1)) AS TEST35
			          ,SUM(SUBSTR(A.ANSWER,36,1)) AS TEST36,SUM(SUBSTR(A.ANSWER,37,1)) AS TEST37,SUM(SUBSTR(A.ANSWER,38,1)) AS TEST38,SUM(SUBSTR(A.ANSWER,39,1)) AS TEST39,SUM(SUBSTR(A.ANSWER,40,1)) AS TEST40
			          ,SUM(SUBSTR(A.ANSWER,41,1)) AS TEST41,SUM(SUBSTR(A.ANSWER,42,1)) AS TEST42,SUM(SUBSTR(A.ANSWER,43,1)) AS TEST43,SUM(SUBSTR(A.ANSWER,44,1)) AS TEST44,SUM(SUBSTR(A.ANSWER,45,1)) AS TEST45
			          ,SUM(SUBSTR(A.ANSWER,46,1)) AS TEST46,SUM(SUBSTR(A.ANSWER,47,1)) AS TEST47,SUM(SUBSTR(A.ANSWER,48,1)) AS TEST48,SUM(SUBSTR(A.ANSWER,49,1)) AS TEST49,SUM(SUBSTR(A.ANSWER,50,1)) AS TEST50
			          ,SUM(SUBSTR(A.ANSWER,51,1)) AS TEST51,SUM(SUBSTR(A.ANSWER,52,1)) AS TEST52,SUM(SUBSTR(A.ANSWER,53,1)) AS TEST53,SUM(SUBSTR(A.ANSWER,54,1)) AS TEST54,SUM(SUBSTR(A.ANSWER,55,1)) AS TEST55
			          ,SUM(SUBSTR(A.ANSWER,56,1)) AS TEST56,SUM(SUBSTR(A.ANSWER,57,1)) AS TEST57,SUM(SUBSTR(A.ANSWER,58,1)) AS TEST58,SUM(SUBSTR(A.ANSWER,59,1)) AS TEST59,SUM(SUBSTR(A.ANSWER,60,1)) AS TEST60
			          ,SUM(SUBSTR(A.ANSWER,61,1)) AS TEST61,SUM(SUBSTR(A.ANSWER,62,1)) AS TEST62,SUM(SUBSTR(A.ANSWER,63,1)) AS TEST63,SUM(SUBSTR(A.ANSWER,64,1)) AS TEST64,SUM(SUBSTR(A.ANSWER,65,1)) AS TEST65
			          ,SUM(SUBSTR(A.ANSWER,66,1)) AS TEST66,SUM(SUBSTR(A.ANSWER,67,1)) AS TEST67,SUM(SUBSTR(A.ANSWER,68,1)) AS TEST68,SUM(SUBSTR(A.ANSWER,69,1)) AS TEST69,SUM(SUBSTR(A.ANSWER,70,1)) AS TEST70
			          ,SUM(SUBSTR(A.ANSWER,71,1)) AS TEST71,SUM(SUBSTR(A.ANSWER,72,1)) AS TEST72,SUM(SUBSTR(A.ANSWER,73,1)) AS TEST73,SUM(SUBSTR(A.ANSWER,74,1)) AS TEST74,SUM(SUBSTR(A.ANSWER,75,1)) AS TEST75
			          ,SUM(SUBSTR(A.ANSWER,76,1)) AS TEST76,SUM(SUBSTR(A.ANSWER,77,1)) AS TEST77,SUM(SUBSTR(A.ANSWER,78,1)) AS TEST78,SUM(SUBSTR(A.ANSWER,79,1)) AS TEST79,SUM(SUBSTR(A.ANSWER,80,1)) AS TEST80
			          ,SUM(SUBSTR(A.ANSWER,81,1)) AS TEST81,SUM(SUBSTR(A.ANSWER,82,1)) AS TEST82,SUM(SUBSTR(A.ANSWER,83,1)) AS TEST83,SUM(SUBSTR(A.ANSWER,84,1)) AS TEST84,SUM(SUBSTR(A.ANSWER,85,1)) AS TEST85
			          ,SUM(SUBSTR(A.ANSWER,86,1)) AS TEST86,SUM(SUBSTR(A.ANSWER,87,1)) AS TEST87,SUM(SUBSTR(A.ANSWER,88,1)) AS TEST88,SUM(SUBSTR(A.ANSWER,89,1)) AS TEST89,SUM(SUBSTR(A.ANSWER,90,1)) AS TEST90
			          ,SUM(SUBSTR(A.ANSWER,91,1)) AS TEST91,SUM(SUBSTR(A.ANSWER,92,1)) AS TEST92,SUM(SUBSTR(A.ANSWER,93,1)) AS TEST93,SUM(SUBSTR(A.ANSWER,94,1)) AS TEST94,SUM(SUBSTR(A.ANSWER,95,1)) AS TEST95
			          ,SUM(SUBSTR(A.ANSWER,96,1)) AS TEST96,SUM(SUBSTR(A.ANSWER,97,1)) AS TEST97,SUM(SUBSTR(A.ANSWER,98,1)) AS TEST98,SUM(SUBSTR(A.ANSWER,99,1)) AS TEST99
			          ,B.EXAM_NO
			          ,B.EXAM_TITLE
			          ,A.POLL_IDX
			          ,A.QUEST_NO
			    FROM ANSWER_MNG A, EXAMPLE_MNG B
			    WHERE 1=1
			    AND A.POLL_IDX = B.POLL_IDX
			    AND A.QUEST_NO = B.QUEST_NO
			    AND A.POLL_IDX = :vo.pollIdx
			    GROUP BY A.POLL_IDX, B.EXAM_NO, B.EXAM_TITLE, A.QUEST_NO, A.ANSWER
			), 
			A2 AS(
			  SELECT 
			   A1.EXAM_TITLE
			  ,A1.EXAM_NO
			  ,A1.POLL_IDX
			  ,A1.QUEST_NO
			  ,DECODE(A1.EXAM_NO,  1, SUM(TEST1),   2, SUM(TEST2),   3, SUM(TEST3),   4, SUM(TEST4),   5, SUM(TEST5),   6, SUM(TEST6),   7, SUM(TEST7),   8, SUM(TEST8),   9, SUM(TEST9),  10, SUM(TEST10),
			                      11, SUM(TEST11), 12, SUM(TEST12), 13, SUM(TEST13), 14, SUM(TEST14), 15, SUM(TEST15), 16, SUM(TEST16), 17, SUM(TEST17), 18, SUM(TEST18), 19, SUM(TEST19), 20, SUM(TEST20),
			                      21, SUM(TEST21), 22, SUM(TEST22), 23, SUM(TEST23), 24, SUM(TEST24), 25, SUM(TEST25), 26, SUM(TEST26), 27, SUM(TEST27), 28, SUM(TEST28), 29, SUM(TEST29), 30, SUM(TEST30),  
			                      31, SUM(TEST31), 32, SUM(TEST32), 33, SUM(TEST33), 34, SUM(TEST34), 35, SUM(TEST35), 36, SUM(TEST36), 37, SUM(TEST37), 38, SUM(TEST38), 39, SUM(TEST39), 40, SUM(TEST40),
			                      41, SUM(TEST41), 42, SUM(TEST42), 43, SUM(TEST43), 44, SUM(TEST44), 45, SUM(TEST45), 46, SUM(TEST46), 47, SUM(TEST47), 48, SUM(TEST48), 49, SUM(TEST49), 50, SUM(TEST50),
			                      51, SUM(TEST51), 52, SUM(TEST52), 53, SUM(TEST53), 54, SUM(TEST54), 55, SUM(TEST55), 56, SUM(TEST56), 57, SUM(TEST57), 58, SUM(TEST58), 59, SUM(TEST59), 60, SUM(TEST60),
			                      61, SUM(TEST61), 62, SUM(TEST62), 63, SUM(TEST63), 64, SUM(TEST64), 65, SUM(TEST65), 66, SUM(TEST66), 67, SUM(TEST67), 68, SUM(TEST68), 69, SUM(TEST69), 70, SUM(TEST70),
			                      71, SUM(TEST71), 72, SUM(TEST72), 73, SUM(TEST73), 74, SUM(TEST74), 75, SUM(TEST75), 76, SUM(TEST76), 77, SUM(TEST77), 78, SUM(TEST78), 79, SUM(TEST79), 80, SUM(TEST80),
			                      81, SUM(TEST81), 82, SUM(TEST82), 83, SUM(TEST83), 84, SUM(TEST84), 85, SUM(TEST85), 86, SUM(TEST86), 87, SUM(TEST87), 88, SUM(TEST88), 89, SUM(TEST89), 90, SUM(TEST90),
			                      91, SUM(TEST91), 92, SUM(TEST92), 93, SUM(TEST93), 94, SUM(TEST94), 95, SUM(TEST95), 96, SUM(TEST96), 97, SUM(TEST97), 98, SUM(TEST98), 99, SUM(TEST99)
			          ) AS  CNT
			  ,   SUM(
			       NVL(TEST1, 0)+NVL(TEST2, 0)+NVL(TEST3 ,0)+NVL(TEST4, 0)+NVL(TEST5, 0)+NVL(TEST6, 0)+NVL(TEST7, 0)+NVL(TEST8, 0)+NVL(TEST9, 0)+NVL(TEST10,0)+
			       NVL(TEST11,0)+NVL(TEST12,0)+NVL(TEST13,0)+NVL(TEST14,0)+NVL(TEST15,0)+NVL(TEST16,0)+NVL(TEST17,0)+NVL(TEST18,0)+NVL(TEST19,0)+NVL(TEST20,0)+
			       NVL(TEST21,0)+NVL(TEST22,0)+NVL(TEST23,0)+NVL(TEST24,0)+NVL(TEST25,0)+NVL(TEST26,0)+NVL(TEST27,0)+NVL(TEST28,0)+NVL(TEST29,0)+NVL(TEST30,0)+
			       NVL(TEST31,0)+NVL(TEST32,0)+NVL(TEST33,0)+NVL(TEST34,0)+NVL(TEST35,0)+NVL(TEST36,0)+NVL(TEST37,0)+NVL(TEST38,0)+NVL(TEST39,0)+NVL(TEST40,0)+
			       NVL(TEST41,0)+NVL(TEST42,0)+NVL(TEST43,0)+NVL(TEST44,0)+NVL(TEST45,0)+NVL(TEST46,0)+NVL(TEST47,0)+NVL(TEST48,0)+NVL(TEST49,0)+NVL(TEST50,0)+
			       NVL(TEST51,0)+NVL(TEST52,0)+NVL(TEST53,0)+NVL(TEST54,0)+NVL(TEST55,0)+NVL(TEST56,0)+NVL(TEST57,0)+NVL(TEST58,0)+NVL(TEST59,0)+NVL(TEST60,0)+
			       NVL(TEST61,0)+NVL(TEST62,0)+NVL(TEST63,0)+NVL(TEST64,0)+NVL(TEST65,0)+NVL(TEST66,0)+NVL(TEST67,0)+NVL(TEST68,0)+NVL(TEST69,0)+NVL(TEST70,0)+
			       NVL(TEST71,0)+NVL(TEST72,0)+NVL(TEST73,0)+NVL(TEST74,0)+NVL(TEST75,0)+NVL(TEST76,0)+NVL(TEST77,0)+NVL(TEST78,0)+NVL(TEST79,0)+NVL(TEST80,0)+
			       NVL(TEST81,0)+NVL(TEST82,0)+NVL(TEST83,0)+NVL(TEST84,0)+NVL(TEST85,0)+NVL(TEST86,0)+NVL(TEST87,0)+NVL(TEST88,0)+NVL(TEST89,0)+NVL(TEST90,0)+
			       NVL(TEST91,0)+NVL(TEST92,0)+NVL(TEST93,0)+NVL(TEST94,0)+NVL(TEST95,0)+NVL(TEST96,0)+NVL(TEST97,0)+NVL(TEST98,0)+NVL(TEST99,0)
			       )  AS  TOTAL
			
			  FROM A1
			  GROUP BY A1.EXAM_TITLE, A1.POLL_IDX, A1.QUEST_NO, A1.EXAM_NO
			),
			A3 AS(
				SELECT POLL_IDX, QUEST_NO, COUNT(1) AS CNT FROM ANSWER_MNG WHERE ANSWER = '99' GROUP BY POLL_IDX, QUEST_NO, ANSWER
			),
			A4 AS(
				SELECT A.POLL_IDX, A.QUEST_NO, A.ANSWER, COUNT(1) AS CNT
				FROM ANSWER_MNG A, QUEST_MNG B
				WHERE 1=1
				AND A.POLL_IDX = B.POLL_IDX
				AND A.QUEST_NO = B.QUEST_NO
				AND A.POLL_IDX = :vo.pollIdx
				AND B.QUEST_TYPE = 'HH101'
				GROUP BY A.POLL_IDX, A.QUEST_NO, A.ANSWER
				ORDER BY A.POLL_IDX, A.QUEST_NO, A.ANSWER
			), 
			A6 AS(
				SELECT A.POLL_IDX, A.QUEST_NO, COUNT(1) CNT
				FROM ANSWER_MNG A
				WHERE 1=1
				AND A.POLL_IDX = :vo.pollIdx
				AND LENGTH(A.ANSWER) = '1'
				AND A.ANSWER <> '99'
				GROUP BY A.POLL_IDX, A.QUEST_NO
				ORDER BY A.POLL_IDX, A.QUEST_NO
			), 
			A7 AS(
				SELECT POLL_IDX, QUEST_NO, EXAM_NO,NVL(EXAM_TITLE, FILE_DESC) AS EXAM_TITLE , CNT, ROUND(CNT / TOTAL * 100, 1) RATIO, FILE_PATH
				FROM (
				    SELECT EM.POLL_IDX,
				           EM.QUEST_NO,
				           EM.EXAM_NO, 
				           DECODE(EM.EXAM_NO, 99, ROWNUM, EM.EXAM_NO),
				           NVL(EXAM_TITLE, IM.FILE_DESC) AS EXAM_TITLE,
				           (SELECT COUNT(*) FROM ANSWER_MNG AM, PANEL_STATE PS WHERE AM.POLL_IDX = PS.POLL_IDX AND AM.PANEL_ID=PS.PANEL_ID AND PS.FILTER_YN ='Y' AND PS.PROG_YN='Y' AND AM.POLL_IDX = EM.POLL_IDX AND AM.QUEST_NO = EM.QUEST_NO AND SUBSTR(AM.ANSWER, DECODE(EM.EXAM_NO, 99, ROWNUM, EM.EXAM_NO), 1) = '1') CNT,
				           (SELECT COUNT(*) FROM ANSWER_MNG AM, PANEL_STATE PS WHERE AM.POLL_IDX = PS.POLL_IDX AND AM.PANEL_ID=PS.PANEL_ID AND PS.FILTER_YN ='Y' AND PS.PROG_YN='Y' AND AM.POLL_IDX = EM.POLL_IDX AND AM.QUEST_NO = EM.QUEST_NO) TOTAL,					
				      IM.FILE_PATH||IM.SAV_FNAME AS FILE_PATH,IM.FILE_DESC													
				    FROM EXAMPLE_MNG EM, QUEST_MNG QM, IMG_MNG IM													
				    WHERE EM.POLL_IDX = QM.POLL_IDX														
				      AND EM.QUEST_NO = QM.QUEST_NO														
				      AND EM.POLL_IDX = IM.POLL_IDX(+)														
				      AND EM.QUEST_NO = IM.QUEST_NO(+)														
				      AND EM.EXAM_NO = IM.EXAM_NO(+)														
				      AND EM.POLL_IDX = :vo.pollIdx
				      AND QUEST_TYPE = 'HH104'															
				    ORDER BY CNT DESC																
				)
				ORDER BY POLL_IDX,QUEST_NO,EXAM_NO
			)
      
      
      
		     SELECT A.POLL_IDX, A.QUEST_NO, A.QUEST_TITLE, 0 AS EXAM_NO
		         , 0 AS CNT
		         , 0 AS TOTAL
		         , 0 AS AVGE2
		         , 0 AS CNT_HH101
		         , 0 AS TOTAL_HH101
		         , 0 AS AVGE
		         , 0 AS CNT_HH104
		         , 0 AS AVGE3
		         , A.QUEST_TYPE
		     FROM QUEST_MNG A
		     WHERE 1=1
		     AND (A.GRAPH_TYPE <> 'JJ199' OR A.QUEST_TYPE = 'HH103')
		     AND A.POLL_IDX = :vo.pollIdx
		       
			UNION ALL
		       
			SELECT A.POLL_IDX
		         ,A.QUEST_NO
		         ,NVL(A.EXAM_TITLE,A.FILE_DESC) AS EXAM_TITLE
		         ,A.EXAM_NO
		         ,DECODE(A.EXAM_NO, '99', A.TOTAL - (SELECT SUM(A2.CNT) 
		                                   FROM A2 
		                                   WHERE A2.POLL_IDX = A.POLL_IDX 
		                                   AND A2.QUEST_NO = A.QUEST_NO 
		                                   GROUP BY A2.POLL_IDX,A2.QUEST_NO)
		                                , A.CNT) AS CNT
		         ,A.TOTAL
		         ,ROUND(DECODE(A.EXAM_NO, '99', A.TOTAL - (SELECT SUM(A2.CNT) 
		                                   FROM A2 
		                                   WHERE A2.POLL_IDX = A.POLL_IDX 
		                                   AND A2.QUEST_NO = A.QUEST_NO 
		                                   GROUP BY A2.POLL_IDX,A2.QUEST_NO)
		                                , A.CNT) / A.TOTAL * 100 ,1) AS AVGE2
		                                
		         ,A.CNT_HH101
		         ,A.TOTAL_HH101 + NVL((SELECT CNT FROM A3 WHERE A.POLL_IDX = A3.POLL_IDX AND A.QUEST_NO = A3.QUEST_NO), 0) AS TOTAL_HH101
		         ,(ROUND((A.CNT_HH101 / DECODE(A.TOTAL_HH101,0,1,A.TOTAL_HH101) * 100),1)) AS AVGE
		         , CNT_HH104
		         , AVGE3
		         ,B.QUEST_TYPE
			FROM(
		   	SELECT A2.POLL_IDX,A2.QUEST_NO,A2.EXAM_TITLE,A2.EXAM_NO
				    ,A2.CNT
				    ,A2.TOTAL
				    ,A4.CNT AS  CNT_HH101
				    ,A6.CNT AS  TOTAL_HH101
		         ,A7.CNT AS CNT_HH104
		         ,A7.RATIO AS AVGE3
		         ,A7.EXAM_TITLE AS FILE_DESC
			FROM A2, A4, A6, A7
			WHERE 1=1
			AND A2.POLL_IDX = A4.POLL_IDX(+)
			AND A2.QUEST_NO = A4.QUEST_NO(+)
			AND A2.EXAM_NO = A4.ANSWER(+)
			AND A2.POLL_IDX = A6.POLL_IDX(+)
			AND A2.QUEST_NO = A6.QUEST_NO(+)
			AND A2.POLL_IDX = A7.POLL_IDX(+)
			AND A2.QUEST_NO = A7.QUEST_NO(+)
		   AND A2.EXAM_NO = A7.EXAM_NO(+)
		         
		)A, QUEST_MNG B
		WHERE 1=1
		AND A.POLL_IDX = B.POLL_IDX
		AND A.QUEST_NO = B.QUEST_NO
		AND B.GRAPH_TYPE <> 'JJ199'
		ORDER BY POLL_IDX, QUEST_NO, EXAM_NO
      
			]]>
			</statement>
			<result class="seoul.research.domain.MobileResult" />
		</query>
		
		<query id="findmobileResultByPk" isDynamic="true">
			<statement>
			<![CDATA[	
				SELECT A.POLL_IDX
					,A.POLL_FIELD
					,A.POLL_ASK
					,A.POLL_DEPARTMENT
					,A.POLL_TITLE
					,TO_CHAR(A.POLL_TERMSTART, 'YYYY-MM-DD HH24:MI') AS  POLL_TERMSTART
					,TO_CHAR(A.POLL_TERMEND, 'YYYY-MM-DD HH24:MI') AS  POLL_TERMEND
					,A.POLL_TARGET
					,A.POLL_SAMPLE
					,A.POLL_COMPANY
					,A.POLL_METHOD
					,A.POLL_CONTENTS
					,A.POLL_KEYWORD
					,A.POLL_OPEN
					,A.POLL_GRADE
					,A.POLL_BUDGET
					,A.POLL_CONTRACT
					,A.POLL_UTILIZE
					,A.POLL_REFER
					,A.POLL_OPINION
					,A.POLL_HIT
					,A.POLL_SUBTITLE
					,A.POLL_STOPYN
					,A.POLL_STOPCOND
					,A.POLL_MILEAGE
					,A.POLL_MFYN
					,A.POLL_AGEYN
					,A.POLL_REGIONYN
					,A.POLL_INTRO
					,A.POLL_MESSAGE
					,A.POLL_GUBUN
					,A.REG_DATE
					,A.REG_ID
					,A.MOD_DATE
					,A.MOD_ID
					,A.POLL_SUBJECT
					,A.POLL_BGIMG
					,A.POLL_QUEST_STATUS
					,(SELECT COUNT(1) FROM PANEL_STATE WHERE POLL_IDX = :vo.pollIdx AND FILTER_YN='Y' AND PROG_YN='Y') AS  CNT
				FROM POLL_MNG A
				WHERE 1=1 
				AND A.POLL_IDX = :vo.pollIdx
			]]>
			</statement>
			<result class="seoul.research.domain.MobileResult" />
		</query>
		
	</queries>
</queryservice>
